/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package npuzzle.gui;

import geneticalgorithm.*;
import java.util.Random;
import npuzzle.NPuzzle;
import npuzzle.TestFitnessFunction;

/**
 *
 * @author M-Art
 */
public class GUINPuzzle extends javax.swing.JFrame {

    /**
     * Creates new form NPuzzleGUI
     */
    public GUINPuzzle() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPuzzleSize = new javax.swing.JSpinner();
        jChromosomeLenght = new javax.swing.JSpinner();
        jIterations = new javax.swing.JSpinner();
        jPopulationSize = new javax.swing.JSpinner();
        jCrossoverRate = new javax.swing.JSpinner();
        jMutationRate = new javax.swing.JSpinner();
        jStartButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPuzzleMixNum = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jGABox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NPuzzleGUI");

        jLabel1.setText("Rozmiar puzzli:");

        jLabel2.setText("Długość chromosomu:");

        jLabel3.setText("Wielkość populacji:");

        jLabel4.setText("Ilość iteracji:");

        jLabel5.setText("Szansa krzyżowania:");

        jLabel6.setText("Szansa mutacji:");

        jPuzzleSize.setRequestFocusEnabled(false);

        jStartButton.setText("Rozpocznij szukanie rozwiązania");
        jStartButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jStartButtonMouseClicked(evt);
            }
        });

        jLabel7.setText("Stopień skomplikowania:");
        jLabel7.setToolTipText("Liczba losowych ruchów przy mieszaniu puzzli.");

        jPuzzleMixNum.setRequestFocusEnabled(false);

        jLabel8.setText("Rodzaj algorytmu:");

        jGABox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Roulette Elitism", "Roulette Wheel" }));
        jGABox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGABoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPuzzleSize)
                            .addComponent(jPuzzleMixNum, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jChromosomeLenght)
                            .addComponent(jIterations)
                            .addComponent(jPopulationSize)
                            .addComponent(jCrossoverRate)
                            .addComponent(jMutationRate)
                            .addComponent(jGABox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jStartButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jGABox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jPuzzleSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jPuzzleMixNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jChromosomeLenght, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jIterations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jPopulationSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jCrossoverRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jMutationRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jStartButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPuzzleSize.setModel(new javax.swing.SpinnerNumberModel(4, 3, 8, 1));
        jChromosomeLenght.setModel(new javax.swing.SpinnerNumberModel(40, 8, 80, 1));
        jIterations.setModel(new javax.swing.SpinnerNumberModel(500, 10, 1000000000, 1));
        jPopulationSize.setModel(new javax.swing.SpinnerNumberModel(200, 8, 500, 1));
        jCrossoverRate.setModel(new javax.swing.SpinnerNumberModel(0.2, 0, 1, 0.1));
        jMutationRate.setModel(new javax.swing.SpinnerNumberModel(0.6, 0, 1, 0.1));
        jPuzzleMixNum.setModel(new javax.swing.SpinnerNumberModel(30, 5, 60, 1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jStartButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jStartButtonMouseClicked
        // TODO add your handling code here:
        GeneFunctions gfunc = new GeneFunctions() {

                    private Random rand = new Random();

                    @Override
                    public int randomGene() {
                        return rand.nextInt(5);
                        // return rand.nextInt(4) + 1;
                    }

                    @Override
                    public int mutateGene(int gene) {
                        gene = (rand.nextBoolean() ? ++gene : --gene);

                        if (gene < 0) {
                            gene = 4;
                        } else if (gene > 4) {
                            gene = 0;
                        }

                        return gene;
                    }
                };
        NPuzzle begginning_state = NPuzzle.createRandomSolvablePuzzle(Integer.parseInt(jPuzzleSize.getValue().toString()), Integer.parseInt(jPuzzleMixNum.getValue().toString()));
        Configuration conf = new Configuration(new TestFitnessFunction(begginning_state), gfunc);
        conf.setChromosomeLength(Integer.parseInt(jChromosomeLenght.getValue().toString()));
        conf.setIterations(Integer.parseInt(jIterations.getValue().toString()));
        conf.setPopulationSize(Integer.parseInt(jPopulationSize.getValue().toString()));
        conf.setCrossoverRate(Double.parseDouble(jCrossoverRate.getValue().toString()));
        conf.setMutationRate(Double.parseDouble(jMutationRate.getValue().toString()));
        GeneticAlgorithm gen_alg = null;
        switch(jGABox.getSelectedIndex()) {
            case 0:
                gen_alg = new GARouletteElitism();
                break;
            case 1:
                gen_alg = new GARouletteWheel();
                break;
        }
        GUIChart gc = new GUIChart(conf, begginning_state, gen_alg);
        gc.setVisible(true);
        new Thread(gc).start();
    }//GEN-LAST:event_jStartButtonMouseClicked

    private void jGABoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGABoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jGABoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;


                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUINPuzzle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUINPuzzle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUINPuzzle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUINPuzzle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GUINPuzzle().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner jChromosomeLenght;
    private javax.swing.JSpinner jCrossoverRate;
    private javax.swing.JComboBox jGABox;
    private javax.swing.JSpinner jIterations;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSpinner jMutationRate;
    private javax.swing.JSpinner jPopulationSize;
    private javax.swing.JSpinner jPuzzleMixNum;
    private javax.swing.JSpinner jPuzzleSize;
    private javax.swing.JButton jStartButton;
    // End of variables declaration//GEN-END:variables
}
