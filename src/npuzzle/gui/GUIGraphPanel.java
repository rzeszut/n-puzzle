/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package npuzzle.gui;

import info.monitorenter.gui.chart.Chart2D;
import info.monitorenter.gui.chart.ITrace2D;
import info.monitorenter.gui.chart.traces.Trace2DLtd;
import info.monitorenter.gui.chart.traces.Trace2DSimple;
import java.awt.Color;

/**
 *
 * @author M-Art
 */
public class GUIGraphPanel extends javax.swing.JPanel {

    private Chart2D chpanel;
    private Trace2DLtd min_series;
    private Trace2DLtd max_series;
    private Trace2DLtd avg_series;
    private int iterate = 0;
    private static int MAX_BUFF_SIZE = 8000;

    /**
     * Creates new form GUIChart
     */
    public GUIGraphPanel() {
        initComponents();
        //----
        min_series = new Trace2DLtd(MAX_BUFF_SIZE, "min_series");
        max_series = new Trace2DLtd(MAX_BUFF_SIZE, "max_series");
        avg_series = new Trace2DLtd(MAX_BUFF_SIZE, "avg_series");

        min_series.setColor(new Color(255, 0, 0));
        max_series.setColor(new Color(0, 255, 0));
        avg_series.setColor(new Color(0, 0, 255));

        // Create a chart:  
        chpanel = new Chart2D();
        // Create an ITrace: 
        ITrace2D trace = new Trace2DSimple();
        // Add the trace to the chart. This has to be done before adding points (deadlock prevention): 
        chpanel.addTrace(min_series);
        chpanel.addTrace(max_series);
        chpanel.addTrace(avg_series);

        chpanel.setBounds(0, 0, this.getPreferredSize().width, this.getPreferredSize().height);
        chpanel.setVisible(true);
        this.add(chpanel);
        //---
    }

    public void updateChart(double min, double avg, double max) {
        if (!Double.isInfinite(min)) {
            min_series.addPoint(iterate, min);
        }
        if (!Double.isInfinite(max)) {
            max_series.addPoint(iterate, max);
        }
        if (!Double.isInfinite(avg)) {
            avg_series.addPoint(iterate, avg);
        }
        ++iterate;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
        chpanel.setBounds(0, 0, this.getSize().width, this.getSize().height);
    }//GEN-LAST:event_formComponentResized
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
